import Head from 'next/head';
import Image from 'next/image';
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import Sidebar from '@/components/sidebar';
import Navbar from '@/components/navbar';

export default function YourAccount() {
  const router = useRouter();
  const backendUrl: string = process.env.NEXT_PUBLIC_API_URL!;
  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const [usernameInput, setUsernameInput] = useState<string>('');
  const [passwordInput, setPasswordInput] = useState<string>('');
  const [username, setUsername] = useState<string | null>(null);

  useEffect(() => {
    if (typeof window !== 'undefined') {
      setUsername(localStorage.getItem('username'));
    }
  }, []);

  async function deleteAcc() {
    let token;
    if (typeof window !== 'undefined') {
        token = localStorage.getItem('token');
    }

    try {
        const response = await fetch(`${backendUrl}deleteaccount`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${token}`
            },
            body: JSON.stringify({
                Username: usernameInput,
                Password: passwordInput
            })
        });

        if (response.ok) {
            // handle successful deletion
            toast.success('Account successfully deleted!', {
                position: toast.POSITION.TOP_RIGHT
            });
            setTimeout(() =>{
                localStorage.removeItem('username');
                localStorage.removeItem('token');
                router.push('/login');
            }, 1500)

        
        } else {
            console.error(response.status);
            if (response.status === 401) {
                toast.error('Incorrect username or password!', {
                    position: toast.POSITION.TOP_RIGHT
                });
            } else {
                toast.error('An unknown error occurred, please try again.', {
                    position: toast.POSITION.TOP_RIGHT
                });
            }
        }
    } catch (error) {
        console.error(error);
        toast.error('An unknown error occurred, please try again.', {
            position: toast.POSITION.TOP_RIGHT
        });
    }
}
  function logout() {
    if (typeof window !== "undefined") {
      try {
      localStorage.removeItem("username");
      localStorage.removeItem("token");
      setUsername(null);
      router.push("/login")
      } catch {}
    }
  }

  return (
    <>
      <Head>
        <title>GraphForms</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div style={{fontFamily:"'Poppins', sans-serif"}} className='bg-white'>
        <ToastContainer/>
        <Sidebar/>
        <Navbar />
        <div id='body' className='mt-[10vh] text-center'>
        <div className='flex mb-20'>
              <div className='mx-auto w-1/2 border-t-2 border-b-2 py-10'>
                <p className="font-semibold sm:text-5xl">Your Account</p>
                <ul className="list-style-none mt-10">
                    <li className="mb-5"><span className="font-medium text-xl">Name</span><br/>{username}</li>
                </ul>
                <div>
                  <button onClick={()=>logout()} className="bg-black text-white font-bold py-2 px-4 rounded mt-2">Logout</button><br/>
                  <button onClick={()=>setModalOpen(true)} className='bg-red-600 text-white font-bold py-2 px-4 rounded mt-2'>
                  Delete Account
                  </button>
                </div>
              </div>
        </div>
        </div>
        {modalOpen ? 
      <>
      <div
        className="justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none"
      >
        <div className="relative w-auto my-6 mx-auto max-w-3xl">
          {/*content*/}
          <div className="border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none">
            {/*header*/}
            <div className="flex items-start justify-between p-5 border-b border-solid border-slate-200 rounded-t">
              
              <h3 className="text-3xl text-black font-semibold">
                Confirm Deletion
              </h3>
              <button
                className="p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none"
                onClick={() => setModalOpen(false)}
              >
                <span className="bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none">
                  Ã—
                </span>
              </button>
            </div>
            {/*body*/}
            <div className="relative p-6 flex-auto">
              <p>Confirm that you would like to permanently delete your account. This action is <span className="font-bold">NOT</span> reversible.</p>
                <input 
                    type="text" 
                    placeholder="Username" 
                    value={usernameInput} 
                    onChange={(e) => setUsernameInput(e.target.value)} 
                    className='mt-3'
                />
                <input 
                    type="password" 
                    placeholder="Password" 
                    value={passwordInput} 
                    onChange={(e) => setPasswordInput(e.target.value)} 
                    className='mt-3'
                />
              <button onClick={deleteAcc} className='mt-5 bg-red-600 text-white font-bold py-2 px-4 rounded mt-2'>
                Permanently Delete Account
              </button>
            </div>
            {/*footer*/}
            <div className="flex items-center justify-center p-6 border-t border-solid border-slate-200 rounded-b">
              <button
                className="text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
                type="button"
                onClick={() => setModalOpen(false)}
              >
                Close
              </button>
              
            </div>
          </div>
        </div>
      </div>
      <div className="opacity-25 fixed inset-0 z-40 bg-black"></div>
    </>: ""}
      </div>
    </>
  )
}
